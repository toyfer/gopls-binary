name: Go

on:
  push:
    branches:
      - main  # メインブランチへのプッシュ時に実行

jobs:
  build:
    name: Build and release
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'  # 最新の安定版Goを使用
          cache: false  # キャッシュを無効化

      - name: Get latest gopls version
        id: get_version
        run: |
          go install -v golang.org/x/tools/gopls@latest
          $goplsVersion = (gopls version).Split(" ")[1].Trim()
          echo "GOPLS_VERSION=$goplsVersion" >> $env:GITHUB_OUTPUT

      - name: Build
        run: |
          $goplsVersion = "${{ steps.get_version.outputs.GOPLS_VERSION }}"
          $dir = Get-Location
          cd $env:USERPROFILE\go\bin
          &"c:\Program Files\7-Zip\7z.exe" a $dir\gopls-$goplsVersion.7z gopls.exe

          cd $dir
          $hash = (Get-FileHash -Algorithm SHA256 gopls-$goplsVersion.7z).Hash
          "$hash  gopls-$goplsVersion.7z" | Out-File -Encoding ascii -File sha256sum.txt
        env:
          GO111MODULE: on

      - name: Check and create release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $releaseName = "gopls-${{ steps.get_version.outputs.GOPLS_VERSION }}"
          $releaseTag = "gopls-${{ steps.get_version.outputs.GOPLS_VERSION }}"
          $release = gh release view $releaseTag 2>&1
          if ($release -match "release not found") {
            echo "Creating new release $releaseName"
            gh release create $releaseTag -t $releaseName -n "gopls ${{ steps.get_version.outputs.GOPLS_VERSION }} binary for Windows 64-bit."
            echo "RELEASE_CREATED=true" >> $env:GITHUB_OUTPUT
          } else {
            echo "Release $releaseName already exists"
            echo "RELEASE_CREATED=false" >> $env:GITHUB_OUTPUT
          }
          echo "RELEASE_TAG=$releaseTag" >> $env:GITHUB_OUTPUT

      - name: Upload 7z artifact
        if: steps.create_release.outputs.RELEASE_CREATED == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $goplsVersion = "${{ steps.get_version.outputs.GOPLS_VERSION }}"
          $artifactPath = "gopls-$goplsVersion.7z"
          gh release upload ${{ steps.create_release.outputs.RELEASE_TAG }} $artifactPath sha256sum.txt

      - name: Notify no update needed
        if: steps.create_release.outputs.RELEASE_CREATED == 'false'
        run: |
          echo "Release for gopls ${{ steps.get_version.outputs.GOPLS_VERSION }} already exists. No update needed."
